services:
  postgres:
    image: pgvector/pgvector:pg17
    restart: unless-stopped
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    
  python:
    build:
      context: .
      dockerfile: Dockerfile-psycopg
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-root}:${POSTGRES_PASSWORD:-root}@postgres:5432/${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-root}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    volumes:
      - ./init_db.py:/code/init_db.py
      - ./.env:/code/.env

  langflow:
    image: langflowai/langflow:latest # or another version tag on https://hub.docker.com/r/langflowai/langflow
    restart: unless-stopped
    pull_policy: always               # set to 'always' when using 'latest' image
    ports:
      - "7860:7860"
    depends_on:
      - python
    environment:
      - LANGFLOW_DATABASE_URL=postgresql://langflow:langflow@postgres:5432/langflow
      # This variable defines where the logs, file storage, monitor data and secret keys are stored.
      - LANGFLOW_CONFIG_DIR=app/langflow
    volumes:
      - ./data/langflow:/app/langflow

  localstack:
    image: localstack/localstack:latest
    restart: unless-stopped
    environment:
      SERVICES: s3
    ports:
      - 4566:4566
    volumes:
      - ./data/localstack-script.sh:/etc/localstack/init/ready.d/script.sh
      - "/var/run/docker.sock:/var/run/docker.sock"

  # Uncomment below to simulate Azure Blob Storage (don't forget to run the init_azure_storage.py to create the container)
  # azurite:
  #   image: mcr.microsoft.com/azure-storage/azurite
  #   ports:
  #     - "10000:10000"  # Blob service
  #     - "10001:10001"  # Queue service
  #     - "10002:10002"  # Table service
  #   volumes:
  #     - ./.data/azurite:/data
  #   command: "azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0"